# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Test Python Package

on:
  push:
    branhes-ignore:
      - test**
  pull_request:
    branhes-ignore:
      - test**
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8, 3.9]
        experimental: [false]
        # include:
        #   - os: macos-latest
        #     python-version: 3.9
        #     experimental: true

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        if [ "${RUNNER_OS}" == "Linux" ]; then
            echo "OS is Linux"
            sudo apt update
            sudo apt install gcc gfortran libopenblas-dev libgomp1 libhdf5-dev make
        elif [ "${RUNNER_OS}" == "macOS" ]; then
            echo "OS is macOS"
            brew install gcc openblas
        else
            echo "OS $RUNNER_OS not supported"
            exit 1
        fi
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Compile and install the package
      run: |
        if [ "${RUNNER_OS}" == "macOS" ]; then
            export CC=gcc-11
            export CXX=g++-11
            export F90=gfortran-11
        fi
        python setup.py build
        python setup.py install
    # - name: Lint with flake8
    #   run: |
    #     python -m pip install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Checkout tests
      uses: actions/checkout@v2
      with:
        repository: marianettigroup/principia-materia-tests
        token: ${{ secrets.TEST_PAT }} # `GitHub_PAT` is a secret that contains your PAT
        path: tests
    - name: Test with pytest
      run: |
        python -m pip install -r tests/requirements.txt
        cd tests/tests && make coverage
