<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Command Line Functionality on Principia Materia</title><link>https://example.docsy.dev/docs/functionality/</link><description>Recent content in Command Line Functionality on Principia Materia</description><generator>Hugo</generator><language>en</language><atom:link href="https://example.docsy.dev/docs/functionality/index.xml" rel="self" type="application/rss+xml"/><item><title>Command line scripts</title><link>https://example.docsy.dev/docs/functionality/scripts/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/scripts/</guid><description>All command line script for PM are stored in the cli module, end with the suffix _cli, and are contained within a function main(). Here we document how to add a new command line tool to PM, which requires two steps. First, the script must be added to the setup.cfg file. Consider the example of the script periodica_cli.py, we would add one entry to the console_scripts as
console_scripts = pm-lid = principia_materia.</description></item><item><title>Crystal Structure</title><link>https://example.docsy.dev/docs/functionality/xtal-structure/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/xtal-structure/</guid><description>For many different tasks performed in the PM suite, a crystal structure, or some component of a crystal structure, must be provided to the code. Most likely, this will be done using a yaml input file, and the two required key words are vec and atoms, which will contain the lattice vectors and the basis atoms, respectively. Considering the flourite structure, the most straightforward yaml file would be:
# xtal.yml vec: [[0.</description></item><item><title>General Utility for crystals</title><link>https://example.docsy.dev/docs/functionality/periodica/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/periodica/</guid><description>Here we provide some of the basic functionality for periodica. A crystal structure file must be provided on the command line, either as a filename or as standard input. The crystal structure is simply output if no other commands are provided. Let us use pm-prototype to look at some examles.
# start with perovskite pm-prototype-xtal --perovskite &amp;gt; xtal.yaml pm-periodica xtal.yaml # or we can simply do this pm-prototype-xtal --perovskite | pm-periodica In both cases, the output will be:</description></item><item><title>Symmetrizing displacements</title><link>https://example.docsy.dev/docs/functionality/xtal-symmetrization/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/xtal-symmetrization/</guid><description>Here we illustrate how to symmtrize displacements at a given q-point according to irreducible representations of the little group using the script pm-disp-qrep. Take the example of \(\bm{q}=(\frac{1}{2},\frac{1}{2},\frac{1}{2})\) in cubic SrTiO\(_3\). We will use pm-prototype-xtal to generate the crystal structure file.
$ pm-prototype-xtal --perovskite &amp;gt; xtal.yml Printing out the irreducible representations, we have
$ pm-disp-qrep xtal.yml --point-group Oh --qpoint 1/2,1/2,1/2 --print-irreps OrbitKey(name=&amp;#39;Sr&amp;#39;, index=0) [0] T2g OrbitKey(name=&amp;#39;Ti&amp;#39;, index=0) [0] T1u OrbitKey(name=&amp;#39;O&amp;#39;, index=0) [0, 1, 2] A1g+Eg+T1g+T2g We can also print out the irreducible representation vectors.</description></item><item><title>Products of Irreducible Representations</title><link>https://example.docsy.dev/docs/functionality/irrep-product/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/irrep-product/</guid><description>A common group theoretical task is the direct product or symmetric direct product of irreducible representations. The composition of a product is obtained as
pm-irrep-product --point-group Oh --irreps T2g,T2g # output # T2gxT2g = A1g+Eg+T1g+T2g The composition of a symmetric product is obtained as
pm-irrep-product --point-group Oh --irreps T2g,T2g --symmetric # output # [T2gxT2g] = A1g+Eg+T2g An arbitrary number of irreps can be handled
pm-irrep-product --point-group Oh --irreps T2g,T2g,Eg,Eg,A2g # output # T2gxT2gxEgxEgxA2g = 2A1g+2A2g+4Eg+4T1g+4T2g Another important task is constructing the irreducible representation vectors of the product representation in terms of the rows of the original irreducible representations.</description></item><item><title>Compute Irreducible Derivative</title><link>https://example.docsy.dev/docs/functionality/compute-id/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/compute-id/</guid><description>Within this package we can compute irreducible derivatives of phonons and phonon interactions at a given order with either LID or BID approach. The theory behind these approaches are described in the following paper:
L. Fu, M. Kornbluth, Z. Cheng, and C. A. Marianetti, Phys. Rev. B 100, 014303 (2019). Specifically, we can execute the LID, SS-BID and HS-BID approaches from the command line using the following commands:
pm-lid-mesh: compute irreducible derivatives of a given FTG and order using LID method;</description></item><item><title>Phonon Linewidth and Thermal Conductivity</title><link>https://example.docsy.dev/docs/functionality/phonon-linewidth/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/phonon-linewidth/</guid><description>Second and third order irreducible derivatives must be computed first, as described here, and the second and third order force constants may then be used to predict the phonon linewidth using perturbation theory. The phonons and the linewidths can then be used to computed thermal conductivity with the relaxation time approximation.
Phonon Linewidth Here we continue the NaCl example from before.
First, we need to prepare a configuration file config.yml for the pm-conductivity command:</description></item></channel></rss>