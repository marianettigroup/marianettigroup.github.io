<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Principia Materia</title><link>https://example.docsy.dev/tags/docs/</link><description>Recent content in Docs on Principia Materia</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 17 Jul 2024 02:41:19 -0400</lastBuildDate><atom:link href="https://example.docsy.dev/tags/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Crystal Structure</title><link>https://example.docsy.dev/docs/functionality/xtal-structure/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/xtal-structure/</guid><description>For many different tasks performed in the PM suite, a crystal structure, or some component of a crystal structure, must be provided to the code. Most likely, this will be done using a yaml input file, and the two required key words are vec and atoms, which will contain the lattice vectors and the basis atoms, respectively. Considering the flourite structure, the most straightforward yaml file would be:
# xtal.yml vec: [[0.</description></item><item><title>General Utility for crystals</title><link>https://example.docsy.dev/docs/functionality/periodica/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/periodica/</guid><description>Here we provide some of the basic functionality for periodica. A crystal structure file must be provided on the command line, either as a filename or as standard input. The crystal structure is simply output if no other commands are provided. Let us use pm-prototype to look at some examles.
# start with perovskite pm-prototype-xtal --perovskite &amp;gt; xtal.yaml pm-periodica xtal.yaml # or we can simply do this pm-prototype-xtal --perovskite | pm-periodica In both cases, the output will be:</description></item><item><title>Symmetrizing displacements</title><link>https://example.docsy.dev/docs/functionality/xtal-symmetrization/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.docsy.dev/docs/functionality/xtal-symmetrization/</guid><description>Here we illustrate how to symmtrize displacements at a given q-point according to irreducible representations of the little group using the script pm-disp-qrep. Take the example of \(\bm{q}=(\frac{1}{2},\frac{1}{2},\frac{1}{2})\) in cubic SrTiO\(_3\). We will use pm-prototype-xtal to generate the crystal structure file.
$ pm-prototype-xtal --perovskite &amp;gt; xtal.yml Printing out the irreducible representations, we have
$ pm-disp-qrep xtal.yml --point-group Oh --qpoint 1/2,1/2,1/2 --print-irreps OrbitKey(name=&amp;#39;Sr&amp;#39;, index=0) [0] T2g OrbitKey(name=&amp;#39;Ti&amp;#39;, index=0) [0] T1u OrbitKey(name=&amp;#39;O&amp;#39;, index=0) [0, 1, 2] A1g+Eg+T1g+T2g We can also print out the irreducible representation vectors.</description></item></channel></rss>